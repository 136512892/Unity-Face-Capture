// This file is generated. Do not modify by hand.
// XML documentation file not found. To check if public methods have XML comments,
// make sure the XML doc file is present and located next to the scraped dll
namespace Unity.LiveCapture.ARKitFaceCapture
{
    [UnityEngine.AddComponentMenu(@"Live Capture/ARKit Face Capture/ARKit Face Actor")] [UnityEngine.DisallowMultipleComponent] [UnityEngine.ExcludeFromPreset] [UnityEngine.ExecuteAlways] [UnityEngine.HelpURL(@"https://docs.unity3d.com/Packages/com.unity.live-capture@2.0/manual/ref-component-arkit-face-actor.html")] [UnityEngine.RequireComponent(typeof(UnityEngine.Animator))] public sealed class FaceActor : UnityEngine.MonoBehaviour
    {
        public UnityEngine.Animator Animator { get; }
        public Unity.LiveCapture.ARKitFaceCapture.FaceMapper Mapper { get; }
        public FaceActor() {}
        public void ClearCache();
        public void SetMapper(Unity.LiveCapture.ARKitFaceCapture.FaceMapper mapper);
        public void UpdateRig(bool continuous);
    }

    public enum FaceBlendShape
    {
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape BrowDownLeft = 0;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape BrowDownRight = 1;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape BrowInnerUp = 2;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape BrowOuterUpLeft = 3;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape BrowOuterUpRight = 4;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape CheekPuff = 5;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape CheekSquintLeft = 6;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape CheekSquintRight = 7;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeBlinkLeft = 8;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeBlinkRight = 9;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookDownLeft = 10;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookDownRight = 11;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookInLeft = 12;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookInRight = 13;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookOutLeft = 14;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookOutRight = 15;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookUpLeft = 16;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeLookUpRight = 17;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeSquintLeft = 18;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeSquintRight = 19;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeWideLeft = 20;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape EyeWideRight = 21;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape Invalid = -1;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape JawForward = 22;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape JawLeft = 23;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape JawOpen = 24;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape JawRight = 25;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthClose = 26;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthDimpleLeft = 27;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthDimpleRight = 28;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthFrownLeft = 29;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthFrownRight = 30;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthFunnel = 31;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthLeft = 32;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthLowerDownLeft = 33;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthLowerDownRight = 34;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthPressLeft = 35;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthPressRight = 36;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthPucker = 37;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthRight = 38;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthRollLower = 39;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthRollUpper = 40;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthShrugLower = 41;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthShrugUpper = 42;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthSmileLeft = 43;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthSmileRight = 44;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthStretchLeft = 45;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthStretchRight = 46;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthUpperUpLeft = 47;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape MouthUpperUpRight = 48;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape NoseSneerLeft = 49;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape NoseSneerRight = 50;
        public const Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape TongueOut = 51;
        public int value__;
    }

    [System.Reflection.DefaultMember(@"Item")] public struct FaceBlendShapePose
    {
        [UnityEngine.Range(0, 1)] public float BrowDownLeft;
        [UnityEngine.Range(0, 1)] public float BrowDownRight;
        [UnityEngine.Range(0, 1)] public float BrowInnerUp;
        [UnityEngine.Range(0, 1)] public float BrowOuterUpLeft;
        [UnityEngine.Range(0, 1)] public float BrowOuterUpRight;
        [UnityEngine.Range(0, 1)] public float CheekPuff;
        [UnityEngine.Range(0, 1)] public float CheekSquintLeft;
        [UnityEngine.Range(0, 1)] public float CheekSquintRight;
        [UnityEngine.Range(0, 1)] public float EyeBlinkLeft;
        [UnityEngine.Range(0, 1)] public float EyeBlinkRight;
        [UnityEngine.Range(0, 1)] public float EyeLookDownLeft;
        [UnityEngine.Range(0, 1)] public float EyeLookDownRight;
        [UnityEngine.Range(0, 1)] public float EyeLookInLeft;
        [UnityEngine.Range(0, 1)] public float EyeLookInRight;
        [UnityEngine.Range(0, 1)] public float EyeLookOutLeft;
        [UnityEngine.Range(0, 1)] public float EyeLookOutRight;
        [UnityEngine.Range(0, 1)] public float EyeLookUpLeft;
        [UnityEngine.Range(0, 1)] public float EyeLookUpRight;
        [UnityEngine.Range(0, 1)] public float EyeSquintLeft;
        [UnityEngine.Range(0, 1)] public float EyeSquintRight;
        [UnityEngine.Range(0, 1)] public float EyeWideLeft;
        [UnityEngine.Range(0, 1)] public float EyeWideRight;
        [UnityEngine.Range(0, 1)] public float JawForward;
        [UnityEngine.Range(0, 1)] public float JawLeft;
        [UnityEngine.Range(0, 1)] public float JawOpen;
        [UnityEngine.Range(0, 1)] public float JawRight;
        [UnityEngine.Range(0, 1)] public float MouthClose;
        [UnityEngine.Range(0, 1)] public float MouthDimpleLeft;
        [UnityEngine.Range(0, 1)] public float MouthDimpleRight;
        [UnityEngine.Range(0, 1)] public float MouthFrownLeft;
        [UnityEngine.Range(0, 1)] public float MouthFrownRight;
        [UnityEngine.Range(0, 1)] public float MouthFunnel;
        [UnityEngine.Range(0, 1)] public float MouthLeft;
        [UnityEngine.Range(0, 1)] public float MouthLowerDownLeft;
        [UnityEngine.Range(0, 1)] public float MouthLowerDownRight;
        [UnityEngine.Range(0, 1)] public float MouthPressLeft;
        [UnityEngine.Range(0, 1)] public float MouthPressRight;
        [UnityEngine.Range(0, 1)] public float MouthPucker;
        [UnityEngine.Range(0, 1)] public float MouthRight;
        [UnityEngine.Range(0, 1)] public float MouthRollLower;
        [UnityEngine.Range(0, 1)] public float MouthRollUpper;
        [UnityEngine.Range(0, 1)] public float MouthShrugLower;
        [UnityEngine.Range(0, 1)] public float MouthShrugUpper;
        [UnityEngine.Range(0, 1)] public float MouthSmileLeft;
        [UnityEngine.Range(0, 1)] public float MouthSmileRight;
        [UnityEngine.Range(0, 1)] public float MouthStretchLeft;
        [UnityEngine.Range(0, 1)] public float MouthStretchRight;
        [UnityEngine.Range(0, 1)] public float MouthUpperUpLeft;
        [UnityEngine.Range(0, 1)] public float MouthUpperUpRight;
        [UnityEngine.Range(0, 1)] public float NoseSneerLeft;
        [UnityEngine.Range(0, 1)] public float NoseSneerRight;
        public const int ShapeCount = 52;
        [UnityEngine.Range(0, 1)] public float TongueOut;
        public float this[int index] { get; set; }
        public static Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape[] Shapes { get; }
        public void FlipHorizontally();
        public float GetValue(Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape location);
        public void SetValue(Unity.LiveCapture.ARKitFaceCapture.FaceBlendShape location, float value);
    }

    [Unity.LiveCapture.CreateDeviceMenuItem(@"ARKit Face Device", 0)] [UnityEngine.AddComponentMenu(@"Live Capture/ARKit Face Capture/ARKit Face Device")] [UnityEngine.ExcludeFromPreset] [UnityEngine.HelpURL(@"https://docs.unity3d.com/Packages/com.unity.live-capture@2.0/manual/ref-component-arkit-face-device.html")] public class FaceDevice : Unity.LiveCapture.CompanionApp.CompanionAppDevice<Unity.LiveCapture.ARKitFaceCapture.IFaceClient>, Unity.LiveCapture.IRegistrable, Unity.LiveCapture.ITimedDataSource
    {
        public Unity.LiveCapture.ARKitFaceCapture.FaceActor Actor { get; set; }
        public virtual int BufferSize { get; set; }
        public virtual string Id { get; }
        public virtual bool IsSynchronized { get; set; }
        public virtual System.Nullable<int> MaxBufferSize { get; }
        public virtual System.Nullable<int> MinBufferSize { get; }
        public virtual Unity.LiveCapture.FrameTime PresentationOffset { get; set; }
        public virtual Unity.LiveCapture.ISynchronizer Synchronizer { get; set; }
        public FaceDevice() {}
        protected virtual string GetAssetName();
        public virtual bool IsReady();
        public virtual void LiveUpdate();
        protected virtual void OnClientAssigned();
        protected virtual void OnClientUnassigned();
        protected virtual void OnDisable();
        protected virtual void OnEnable();
        protected virtual void OnRecordingChanged();
        public virtual Unity.LiveCapture.TimedSampleStatus PresentAt(Unity.LiveCapture.Timecode timecode, Unity.LiveCapture.FrameRate frameRate);
        public virtual void UpdateDevice();
        public virtual void Write(Unity.LiveCapture.ITakeBuilder takeBuilder);
    }

    public abstract class FaceMapper : UnityEngine.ScriptableObject
    {
        protected FaceMapper() {}
        public abstract void ApplyBlendShapesToRig(Unity.LiveCapture.ARKitFaceCapture.FaceActor actor, Unity.LiveCapture.ARKitFaceCapture.FaceMapperCache cache, ref Unity.LiveCapture.ARKitFaceCapture.FaceBlendShapePose pose, bool continuous);
        public abstract void ApplyEyeRotationToRig(Unity.LiveCapture.ARKitFaceCapture.FaceActor actor, Unity.LiveCapture.ARKitFaceCapture.FaceMapperCache cache, ref Unity.LiveCapture.ARKitFaceCapture.FaceBlendShapePose pose, ref UnityEngine.Quaternion leftEyeRotation, ref UnityEngine.Quaternion rightEyeRotation, bool continuous);
        public abstract void ApplyHeadPositionToRig(Unity.LiveCapture.ARKitFaceCapture.FaceActor actor, Unity.LiveCapture.ARKitFaceCapture.FaceMapperCache cache, ref UnityEngine.Vector3 headPosition, bool continuous);
        public abstract void ApplyHeadRotationToRig(Unity.LiveCapture.ARKitFaceCapture.FaceActor actor, Unity.LiveCapture.ARKitFaceCapture.FaceMapperCache cache, ref UnityEngine.Quaternion headOrientation, bool continuous);
        public virtual Unity.LiveCapture.ARKitFaceCapture.FaceMapperCache CreateCache(Unity.LiveCapture.ARKitFaceCapture.FaceActor actor);
    }

    public abstract class FaceMapperCache : System.IDisposable
    {
        public bool Disposed { get; }
        protected FaceMapperCache() {}
        public virtual void Dispose();
        protected virtual void Finalize();
        protected virtual void OnDispose(bool disposing);
    }

    public interface IFaceClient : Unity.LiveCapture.CompanionApp.ICompanionAppClient
    {
    }
}
